<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbUserLogin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMgAyAIcAAP//////zP//mf//Zv//M///AP/M///MzP/Mmf/MZv/MM//MAP+Z//+ZzP+Zmf+Z
        Zv+ZM/+ZAP9m//9mzP9mmf9mZv9mM/9mAP8z//8zzP8zmf8zZv8zM/8zAP8A//8AzP8Amf8AZv8AM/8A
        AMz//8z/zMz/mcz/Zsz/M8z/AMzM/8zMzMzMmczMZszMM8zMAMyZ/8yZzMyZmcyZZsyZM8yZAMxm/8xm
        zMxmmcxmZsxmM8xmAMwz/8wzzMwzmcwzZswzM8wzAMwA/8wAzMwAmcwAZswAM8wAAJn//5n/zJn/mZn/
        Zpn/M5n/AJnM/5nMzJnMmZnMZpnMM5nMAJmZ/5mZzJmZmZmZZpmZM5mZAJlm/5lmzJlmmZlmZplmM5lm
        AJkz/5kzzJkzmZkzZpkzM5kzAJkA/5kAzJkAmZkAZpkAM5kAAGb//2b/zGb/mWb/Zmb/M2b/AGbM/2bM
        zGbMmWbMZmbMM2bMAGaZ/2aZzGaZmWaZZmaZM2aZAGZm/2ZmzGZmmWZmZmZmM2ZmAGYz/2YzzGYzmWYz
        ZmYzM2YzAGYA/2YAzGYAmWYAZmYAM2YAADP//zP/zDP/mTP/ZjP/MzP/ADPM/zPMzDPMmTPMZjPMMzPM
        ADOZ/zOZzDOZmTOZZjOZMzOZADNm/zNmzDNmmTNmZjNmMzNmADMz/zMzzDMzmTMzZjMzMzMzADMA/zMA
        zDMAmTMAZjMAMzMAAAD//wD/zAD/mQD/ZgD/MwD/AADM/wDMzADMmQDMZgDMMwDMAACZ/wCZzACZmQCZ
        ZgCZMwCZAABm/wBmzABmmQBmZgBmMwBmAAAz/wAzzAAzmQAzZgAzMwAzAAAA/wAAzAAAmQAAZgAAMwAA
        AP/+///9///8///7/0pIScfDxfz6+yIgIvv4+/78/vz6/Pr4+vb09u/t7+bk5tbU1v38/fv6+9za3bOy
        tHh3eqenqYuLjby8vf798v/74f79+fXszdK0WYFrMPPt4eXbyunCidq2gtTDqUI+OPn28+Xi3/Xy8FtZ
        WCH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAMgAyAAAI/wABCBxIsKDBgwgTKlzIsKHDhxAd
        bptIsSI2bBUJaqOYDcC2jgIxVqR4caI2jyBHjsy2kWO2ly23acsmM9vFmCNnmqQ5k6bKn0BVAhAXzmfQ
        nxEVjlPnjp25pC+jghT4EhsAefb4EbxI8Byrb99WALAaEiQ2kFONmrxo1Sq/e/ji3tMq0Fy7de/cBQIb
        CCXbjRdpvtzGNqhVf3DzxV18Dx2Af99YuVuxDiw7jxyx4Txqcqw9fflCL16cT9+9r+4EtgNrBcBUcOTE
        AdjYsra227jD9dM3Y4ZofAhGx83X5Vs7ge7AvgMQztw7dv+gPz17m2XPgrx9h1YMXHjcGV30yf8DsJeV
        FXf/WO37tg+y+XQIcWPj11s79+7er1xRfG89WG7rBYIeN1Zwc80/5wzkU0wA3NPbdvcF510+M+AT2hXc
        sPJPdOWlx0qGrFw2mE4UAZDddoshIKF3FoqWzz4aqvdVhtwIyA474LTUEUXaYEOhfSmyOByEMwSyAow1
        /sPNOrEBsM4/5XhEFmGHPfgbcCtOiOIMqbETCDrhsLNPOwkC0A03CZI1Flf9WBlhlsJBiM8VrVkB5T8w
        tlfXP8exVdI2Jtr3ppAtinbFceuMKeM++5RTzjn/pKZSNuFQiGJcKsI5mpxdrANAP9xkyCiNSF42kU0y
        YeOPmylquimK9XT/A4A57rFiq3qhBhIIOSxZdVKDgrZKaKGKCdLCAAko4AIW69nKjSCCKNlPQSfxJiem
        rpIG4T/10OCtCwrQIIi3NCiggCD1KICAY7Np442ll2JJKISh7SWIF/XUg0W43XoLrbkKzCMQYeWwGuS8
        9Ka3D4BfCWJuPYjsky7ACAwMLJAHs0hvaCACCNY3EwMscsUeBRpvpkJujM8Mt/qX4TfligwwPlSZeEUX
        Xeins85XWigDvXN+Zes3gayzDivpugAuwPRUbJVM5DwJIqOIRNxeIFdo93OhQd8a4jsriCnzudykBthA
        5XSjl3/qwSj01fvdd4WM3xBoxQrusLK0uS74/yeWmgWV844Vgbz88eEf1pN1IHQT6M5zeotMg4butNZQ
        Ov20A11kQx/OOYyRsePOk/vwDS4N37DzHLWAh6QmOc167fnhgbTTDqMyo147Ox1hEw46PTLUzeztdLNO
        O1Yg7uU37tyTKbPfRHrZReSYo8452KujfT/cm+O9OeR0oyQ3/zBJTmzlcDM7K08NlJyt+0gqkzbVq7NC
        N/jnn/8Kg1vhfzsrOMf9ukEZ9R3OHdg7hzrMcQ4DhmU2HBmLOMrRDwGu4ILYU1vl/Oe/FWhve2oLxIbY
        EcAEYm8dN7JCP8xRDh7JR4LgGAc5HPUOoxntHcbrhj36cY97GA8v76hhmd4GYg4gruMp4SgRVcIBDn8w
        8H5BjKIUg6g/IAbRaN24Rz/s4Q95UCaI2HOdVbJRPwHi74JoTKMa13jB62VxHnCEow/PQQ51jGNNgYGN
        o8rhPe758Y8fDKQgyxGOpdgjHohEpD3UUY4J3jEnwXMXP/jhj0paspJ7zGQ5/OEoXn2EHP6AhyhHWQ5e
        xeYouKlIbsJxm3CwMjfaYOVHXJNEKvHoJyw5lVp4BBPcpHJ+tzkVBHdSkVxmxCd/4owydxQU16CSKhm5
        zTCdSc2WJHMif/qVT5LCzW5685vgDOdAAgIAOw==
</value>
  </data>
</root>